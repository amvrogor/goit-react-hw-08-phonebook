{"version":3,"file":"static/js/284.b305df0b.chunk.js","mappings":"oQAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gPAYJE,EAAYF,EAAAA,GAAAA,MAAH,qEAKTG,GAAeH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,2DAKZK,EAAeL,EAAAA,GAAAA,OAAH,soB,UCbnBM,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GAAW,oBACfC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,EAAAA,GAAW,uBAClBI,IAAI,EAAG,qDACPF,SAAS,0BAGDG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,CACEC,cAAe,CACbP,MAAO,GACPE,SAAU,IAEZJ,iBAAkBA,EAClBU,SAAU,SAACC,EAAQC,GACjBL,GACEM,EAAAA,EAAAA,IAAM,CACJX,MAAOS,EAAOT,MACdE,SAAUO,EAAOP,YAGrBQ,EAAQE,WACT,EAdH,UAgBE,UAACrB,EAAD,YACE,UAACG,EAAD,oBAEE,SAAC,KAAD,CAAOmB,KAAK,QAAQC,KAAK,WACzB,SAACnB,EAAD,CAAcmB,KAAK,QAAQC,UAAU,aAEvC,UAACrB,EAAD,uBAEE,SAAC,KAAD,CAAOmB,KAAK,WAAWC,KAAK,cAC5B,SAACnB,EAAD,CAAcmB,KAAK,WAAWC,UAAU,aAE1C,SAAClB,EAAD,CAAcgB,KAAK,SAAnB,wBAIP,ECrDc,SAASG,IACtB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,wCAEF,SAACZ,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormikForm, ErrorMessage as FormikError } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  width: 50%;\n  margin-bottom: 10px;\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  border-radius: 5px;\n  background-color: #f3f3f3;\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.12);\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  font-size: 14px;\n  color: red;\n`;\n\nexport const SubmitButton = styled.button`\n  /* width: 100%; */\n  margin: 0 auto;\n  padding: 4px 16px;\n  border-radius: 2px;\n  background-color: #ee8905;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #ffffff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 130px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    background-color: #ff9100;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { logIn } from 'redux/operations';\n\nimport {\n  Form,\n  FormField,\n  ErrorMessage,\n  SubmitButton,\n} from './LoginForm.styled';\n\nconst validationSchema = Yup.object({\n  email: Yup.string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: Yup.string('Enter your password')\n    .min(7, 'Password should be of minimum 7 characters length')\n    .required('Password is required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={(values, actions) => {\n        dispatch(\n          logIn({\n            email: values.email,\n            password: values.password,\n          })\n        );\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <FormField>\n          Email\n          <Field type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"span\" />\n        </FormField>\n        <FormField>\n          Password\n          <Field type=\"password\" name=\"password\" />\n          <ErrorMessage name=\"password\" component=\"span\" />\n        </FormField>\n        <SubmitButton type=\"submit\">Log In</SubmitButton>\n      </Form>\n    </Formik>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </HelmetProvider>\n  );\n}\n"],"names":["Form","styled","FormikForm","FormField","ErrorMessage","FormikError","SubmitButton","validationSchema","Yup","email","required","password","min","LoginForm","dispatch","useDispatch","initialValues","onSubmit","values","actions","logIn","resetForm","type","name","component","Login"],"sourceRoot":""}