{"version":3,"file":"static/js/795.de0ffc3c.chunk.js","mappings":"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","sources":["components/contactsValidationSchema.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","../node_modules/react-confirm-alert/lib/index.js"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const contactsValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Name is required'),\n  number: Yup.string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Phone number is required'),\n});\n","import styled from 'styled-components';\nimport { Form as FormikForm, ErrorMessage as FormikError } from 'formik';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  :nth-child(even) {\n    background-color: #e9e9ed;\n  }\n`;\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 5px;\n  width: 100%;\n`;\n\nexport const Name = styled.span``;\n\nexport const Number = styled.span`\n  margin-left: auto;\n`;\n\nexport const Form = styled(FormikForm)`\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  font-size: 14px;\n  color: red;\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Button = styled.button`\n  min-width: 65px;\n  padding: 2px 10px;\n  border-radius: 2px;\n  background-color: #ee8905;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #ffffff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    background-color: #ff9100;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { deleteContact, changeContact } from 'redux/operations';\nimport { setIsChanged } from 'redux/isChangedSlice';\nimport { useContacts, useIsChanged } from 'hooks';\nimport { Formik, Field } from 'formik';\nimport { contactsValidationSchema } from 'components/contactsValidationSchema';\nimport {\n  ContactItem,\n  ContactInfo,\n  Name,\n  Number,\n  Form,\n  FormField,\n  ErrorMessage,\n  Button,\n  Buttons,\n} from './Contact.styled';\n\nexport const Contact = ({ contact: { name, number, id } }) => {\n  const dispatch = useDispatch();\n  const contacts = useContacts();\n  const isChanged = useIsChanged();\n  const handleDelete = () => {\n    confirmAlert({\n      title: '',\n      message: 'Are you sure?',\n      buttons: [\n        {\n          style: { backgroundColor: '#ee8905' },\n          label: 'Yes',\n          onClick: () => {\n            dispatch(deleteContact(id));\n          },\n        },\n        {\n          style: { backgroundColor: '#ee8905' },\n          label: 'No',\n          onClick: () => {},\n        },\n      ],\n    });\n  };\n\n  const handleIsChanged = () => {\n    dispatch(setIsChanged(id, true));\n  };\n  return (\n    <ContactItem>\n      <ContactInfo>\n        <Name> {name}:</Name>\n        <Number> {number}</Number>\n        <Button onClick={handleIsChanged}>Edit</Button>\n        <Button onClick={handleDelete}>Delete</Button>\n      </ContactInfo>\n      {isChanged.id === id && isChanged.value === true && (\n        <Formik\n          initialValues={{\n            name,\n            number,\n            id,\n          }}\n          validationSchema={contactsValidationSchema}\n          onSubmit={(values, actions) => {\n            if (\n              contacts\n                .filter(\n                  contact =>\n                    contact.id.toLowerCase() !== values.id.toLowerCase()\n                )\n                .find(\n                  contact =>\n                    contact.name.toLowerCase() === values.name.toLowerCase()\n                )\n            )\n              toast.error(`${values.name} is already in contacts`);\n            else {\n              dispatch(changeContact(values));\n              dispatch(setIsChanged(id, false));\n            }\n            actions.resetForm();\n          }}\n        >\n          <Form>\n            <FormField>\n              Edit name\n              <Field name=\"name\" />\n              <ErrorMessage name=\"name\" component=\"span\" />\n            </FormField>\n            <FormField>\n              Edit number\n              <Field name=\"number\" />\n              <ErrorMessage name=\"number\" component=\"span\" />\n            </FormField>\n            <Buttons>\n              <Button type=\"submit\">Save contact</Button>\n              <Button\n                type=\"button\"\n                onClick={() => dispatch(setIsChanged(id, false))}\n              >\n                Cancel\n              </Button>\n            </Buttons>\n          </Form>\n        </Formik>\n      )}\n    </ContactItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  width: 50%;\n  font-size: 16px;\n  margin-top: 0;\n  margin-bottom: 5px;\n  /* color: #ee8905; */\n`;\n\nexport const List = styled.ul`\n  width: 50%;\n  margin: 0;\n  padding: 0;\n  background-color: #f3f3f3;\n  border-radius: 5px;\n  overflow: hidden;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); ;\n`;\n","import { useFilteredContacts } from 'hooks';\nimport { Contact } from '../Contact/Contact';\nimport { List, Title } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const contacts = useFilteredContacts();\n  return (\n    <>\n      <Title>Contacts</Title>\n      {contacts.length !== 0 && (\n        <List>\n          {contacts.map(contact => (\n            <Contact key={contact.id} contact={contact} />\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Form as FormikForm, ErrorMessage as FormikError } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  width: 50%;\n  margin-bottom: 10px;\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  border-radius: 5px;\n  background-color: #f3f3f3;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  font-size: 14px;\n  color: red;\n`;\n\nexport const SubmitButton = styled.button`\n  /* width: 100%; */\n  margin: 0 auto;\n  padding: 4px 16px;\n  border-radius: 2px;\n  background-color: #ee8905;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #ffffff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 130px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    background-color: #ff9100;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { Formik, Field } from 'formik';\nimport { contactsValidationSchema } from 'components/contactsValidationSchema';\nimport { addContact } from 'redux/operations';\nimport { useContacts } from 'hooks';\n\nimport {\n  Form,\n  FormField,\n  ErrorMessage,\n  SubmitButton,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useContacts();\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={contactsValidationSchema}\n      onSubmit={(values, actions) => {\n        contacts.find(\n          contact => contact.name.toLowerCase() === values.name.toLowerCase()\n        )\n          ? toast.error(`${values.name} is already in contacts`)\n          : dispatch(addContact(values));\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <FormField>\n          Name\n          <Field name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormField>\n        <FormField>\n          Number\n          <Field name=\"number\" />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </FormField>\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterField = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  width: 50%;\n  margin-bottom: 10px;\n  font-size: 16px;\n  font-weight: bold;\n  /* color: #ee8905; */\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filterSlice';\nimport { FilterField } from './Filter.styled';\nimport { useFilter } from 'hooks';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useFilter();\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterField>\n      Find contacts by name\n      <input type=\"text\" value={filter} onChange={changeFilter} />\n    </FilterField>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { fetchContacts } from 'redux/operations';\nimport { selectIsLoading } from 'redux/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>My contacts</title>\n      </Helmet>\n      <ContactForm />\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactsList />\n    </HelmetProvider>\n  );\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp2;\n\nexports.confirmAlert = confirmAlert;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _client = require('react-dom/client');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ReactConfirmAlert = (_temp2 = _class = function (_Component) {\n  _inherits(ReactConfirmAlert, _Component);\n\n  function ReactConfirmAlert() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ReactConfirmAlert);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ReactConfirmAlert.__proto__ || Object.getPrototypeOf(ReactConfirmAlert)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickButton = function (button) {\n      if (button.onClick) button.onClick();\n      _this.close();\n    }, _this.handleClickOverlay = function (e) {\n      var _this$props = _this.props,\n          closeOnClickOutside = _this$props.closeOnClickOutside,\n          onClickOutside = _this$props.onClickOutside;\n\n      var isClickOutside = e.target === _this.overlay;\n\n      if (closeOnClickOutside && isClickOutside) {\n        onClickOutside();\n        _this.close();\n      }\n\n      e.stopPropagation();\n    }, _this.close = function () {\n      var afterClose = _this.props.afterClose;\n\n      removeBodyClass();\n      removeElementReconfirm(_this.props);\n      removeSVGBlurReconfirm(afterClose);\n    }, _this.keyboard = function (event) {\n      var _this$props2 = _this.props,\n          closeOnEscape = _this$props2.closeOnEscape,\n          onKeypressEscape = _this$props2.onKeypressEscape,\n          onkeyPress = _this$props2.onkeyPress,\n          keyCodeForClose = _this$props2.keyCodeForClose;\n\n      var keyCode = event.keyCode;\n      var isKeyCodeEscape = keyCode === 27;\n\n      if (keyCodeForClose.includes(keyCode)) {\n        _this.close();\n      }\n\n      if (closeOnEscape && isKeyCodeEscape) {\n        onKeypressEscape(event);\n        _this.close();\n      }\n\n      if (onkeyPress) {\n        onkeyPress();\n      }\n    }, _this.componentDidMount = function () {\n      document.addEventListener('keydown', _this.keyboard, false);\n    }, _this.componentWillUnmount = function () {\n      document.removeEventListener('keydown', _this.keyboard, false);\n      _this.props.willUnmount();\n    }, _this.renderCustomUI = function () {\n      var _this$props3 = _this.props,\n          title = _this$props3.title,\n          message = _this$props3.message,\n          buttons = _this$props3.buttons,\n          customUI = _this$props3.customUI;\n\n      var dataCustomUI = {\n        title: title,\n        message: message,\n        buttons: buttons,\n        onClose: _this.close\n      };\n\n      return customUI(dataCustomUI);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ReactConfirmAlert, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          title = _props.title,\n          message = _props.message,\n          buttons = _props.buttons,\n          childrenElement = _props.childrenElement,\n          customUI = _props.customUI,\n          overlayClassName = _props.overlayClassName;\n\n\n      return _react2.default.createElement(\n        'div',\n        {\n          className: 'react-confirm-alert-overlay ' + overlayClassName,\n          ref: function ref(dom) {\n            return _this2.overlay = dom;\n          },\n          onClick: this.handleClickOverlay\n        },\n        _react2.default.createElement(\n          'div',\n          { className: 'react-confirm-alert' },\n          customUI ? this.renderCustomUI() : _react2.default.createElement(\n            'div',\n            { className: 'react-confirm-alert-body' },\n            title && _react2.default.createElement(\n              'h1',\n              null,\n              title\n            ),\n            message,\n            childrenElement(),\n            _react2.default.createElement(\n              'div',\n              { className: 'react-confirm-alert-button-group' },\n              buttons.map(function (button, i) {\n                return _react2.default.createElement(\n                  'button',\n                  _extends({\n                    key: i,\n                    className: button.className\n                  }, button, {\n                    onClick: function onClick(e) {\n                      return _this2.handleClickButton(button);\n                    }\n                  }),\n                  button.label\n                );\n              })\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return ReactConfirmAlert;\n}(_react.Component), _class.propTypes = {\n  title: _propTypes2.default.string,\n  message: _propTypes2.default.string,\n  buttons: _propTypes2.default.array.isRequired,\n  childrenElement: _propTypes2.default.func,\n  customUI: _propTypes2.default.func,\n  closeOnClickOutside: _propTypes2.default.bool,\n  closeOnEscape: _propTypes2.default.bool,\n  keyCodeForClose: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  willUnmount: _propTypes2.default.func,\n  afterClose: _propTypes2.default.func,\n  onClickOutside: _propTypes2.default.func,\n  onKeypressEscape: _propTypes2.default.func,\n  onkeyPress: _propTypes2.default.func,\n  overlayClassName: _propTypes2.default.string\n}, _class.defaultProps = {\n  buttons: [{\n    label: 'Cancel',\n    onClick: function onClick() {\n      return null;\n    },\n    className: null\n  }, {\n    label: 'Confirm',\n    onClick: function onClick() {\n      return null;\n    },\n    className: null\n  }],\n  childrenElement: function childrenElement() {\n    return null;\n  },\n  closeOnClickOutside: true,\n  closeOnEscape: true,\n  keyCodeForClose: [],\n  willUnmount: function willUnmount() {\n    return null;\n  },\n  afterClose: function afterClose() {\n    return null;\n  },\n  onClickOutside: function onClickOutside() {\n    return null;\n  },\n  onKeypressEscape: function onKeypressEscape() {\n    return null;\n  }\n}, _temp2);\nexports.default = ReactConfirmAlert;\n\n\nvar root = null;\nvar targetId = 'react-confirm-alert';\n\nfunction createSVGBlurReconfirm() {\n  // If has svg ignore to create the svg\n  var svg = document.getElementById('react-confirm-alert-firm-svg');\n  if (svg) return;\n  var svgNS = 'http://www.w3.org/2000/svg';\n  var feGaussianBlur = document.createElementNS(svgNS, 'feGaussianBlur');\n  feGaussianBlur.setAttribute('stdDeviation', '0.3');\n\n  var filter = document.createElementNS(svgNS, 'filter');\n  filter.setAttribute('id', 'gaussian-blur');\n  filter.appendChild(feGaussianBlur);\n\n  var svgElem = document.createElementNS(svgNS, 'svg');\n  svgElem.setAttribute('id', 'react-confirm-alert-firm-svg');\n  svgElem.setAttribute('class', 'react-confirm-alert-svg');\n  svgElem.appendChild(filter);\n\n  document.body.appendChild(svgElem);\n}\n\nfunction removeSVGBlurReconfirm(afterClose) {\n  var svg = document.getElementById('react-confirm-alert-firm-svg');\n  if (svg) {\n    svg.parentNode.removeChild(svg);\n  }\n  document.body.children[0].classList.remove('react-confirm-alert-blur');\n  afterClose();\n}\n\nfunction createElementReconfirm(properties) {\n  var divTarget = document.getElementById(properties.targetId || targetId);\n\n  if (properties.targetId && !divTarget) {\n    console.error('React Confirm Alert:', 'Can not get element id (#' + properties.targetId + ')');\n  }\n\n  if (divTarget) {\n    root = (0, _client.createRoot)(divTarget);\n    root.render(_react2.default.createElement(ReactConfirmAlert, properties));\n  } else {\n    document.body.children[0].classList.add('react-confirm-alert-blur');\n    divTarget = document.createElement('div');\n    divTarget.id = targetId;\n    document.body.appendChild(divTarget);\n    root = (0, _client.createRoot)(divTarget);\n    root.render(_react2.default.createElement(ReactConfirmAlert, properties));\n  }\n}\n\nfunction removeElementReconfirm(properties) {\n  var target = document.getElementById(properties.targetId || targetId);\n  if (target) {\n    root.unmount(target);\n  }\n}\n\nfunction addBodyClass() {\n  document.body.classList.add('react-confirm-alert-body-element');\n}\n\nfunction removeBodyClass() {\n  document.body.classList.remove('react-confirm-alert-body-element');\n}\n\nfunction confirmAlert(properties) {\n  addBodyClass();\n  createSVGBlurReconfirm();\n  createElementReconfirm(properties);\n}"],"names":["contactsValidationSchema","Yup","shape","name","matches","required","number","ContactItem","styled","ContactInfo","Name","Number","Form","FormikForm","FormField","ErrorMessage","FormikError","Buttons","Button","Contact","contact","id","dispatch","useDispatch","contacts","useContacts","isChanged","useIsChanged","onClick","setIsChanged","confirmAlert","title","message","buttons","style","backgroundColor","label","deleteContact","value","initialValues","validationSchema","onSubmit","values","actions","filter","toLowerCase","find","toast","changeContact","resetForm","component","type","Title","List","ContactsList","useFilteredContacts","length","map","SubmitButton","ContactForm","addContact","FilterField","Filter","useFilter","onChange","e","setFilter","currentTarget","Contacts","isLoading","useSelector","selectIsLoading","useEffect","fetchContacts","_class","_temp2","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","exports","properties","document","body","classList","add","getElementById","svgNS","feGaussianBlur","createElementNS","setAttribute","appendChild","svgElem","createSVGBlurReconfirm","divTarget","targetId","console","error","children","createElement","root","_client","createRoot","render","_react2","default","ReactConfirmAlert","createElementReconfirm","_react","require","_interopRequireDefault","_propTypes2","obj","__esModule","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_Component","_ref","_temp","_this","this","_len","args","Array","_key","__proto__","getPrototypeOf","apply","concat","handleClickButton","button","close","handleClickOverlay","_this$props","closeOnClickOutside","onClickOutside","isClickOutside","overlay","stopPropagation","afterClose","removeBodyClass","removeElementReconfirm","removeSVGBlurReconfirm","keyboard","event","_this$props2","closeOnEscape","onKeypressEscape","onkeyPress","keyCodeForClose","keyCode","isKeyCodeEscape","includes","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","willUnmount","renderCustomUI","_this$props3","customUI","onClose","subClass","superClass","create","constructor","setPrototypeOf","_inherits","_this2","_props","childrenElement","overlayClassName","className","ref","dom","Component","propTypes","string","array","isRequired","func","bool","arrayOf","defaultProps","svg","parentNode","removeChild","remove","unmount"],"sourceRoot":""}